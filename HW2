
 1 уровень сложности: №1.


Создайте массив из 8 случайных целых чисел из интервала [1;50]

Выведите массив на консоль в строку.

Замените каждый элемент с нечетным индексом на ноль.

Снова выведете массив на консоль в отдельной строке.


№2.



Создайте массив из 5 случайных целых чисел из интервала [10;99]

Выведите его на консоль в строку.

Определите и выведите на экран сообщение о том, является ли
массив строго возрастающей последовательностью.

java
import java.util.Random;

public class ArrayTasks {
    public static void main(String[] args) {
        int[] array1 = generateRandomArray(8, 1, 50);
        System.out.println("Исходный массив:");
        printArray(array1);

        replaceOddElements(array1);
        System.out.println("Массив после замены нечетных элементов на ноль:");
        printArray(array1);

        int[] array2 = generateRandomArray(5, 10, 99);
        System.out.println("Массив:");
        printArray(array2);

        boolean isIncreasing = isStrictlyIncreasing(array2);

        if (isIncreasing) {
            System.out.println("Массив является строго возрастающей последовательностью");
        } else {
            System.out.println("Массив не является строго возрастающей последовательностью");
        }
    }

    public static int[] generateRandomArray(int size, int min, int max) {
        Random random = new Random();
        int[] array = new int[size];

        for (int i = 0; i < size; i++) {
            array[i] = random.nextInt(max - min + 1) + min;
        }

        return array;
    }

    public static void printArray(int[] array) {
        for (int element : array) {
            System.out.print(element + " ");
        }
        System.out.println();
    }

    public static void replaceOddElements(int[] array) {
        for (int i = 1; i < array.length; i += 2) {
            array[i] = 0;
        }
    }

    public static boolean isStrictlyIncreasing(int[] array) {
        for (int i = 1; i < array.length; i++) {
            if (array[i] <= array[i - 1]) {
                return false;
            }
        }
        return true;
    }
}


